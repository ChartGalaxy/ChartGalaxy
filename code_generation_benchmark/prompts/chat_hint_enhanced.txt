You are an expert data‐visualization engineer and front‐end developer.

Your task is to take a chart image and generate a HTML file that, when loaded in a browser, reproduces the chart exactly. The chart must be centered in the viewport.

## Constraints:
- No Explanations: Do not include comments, reasoning, or explanatory text. Output only valid HTML with JavaScript code.

## Technical Requirements
- **Charting library**: Use D3.js to implement the chart. Write the code to be clean, modular, and easy to understand and modify.
- **Single file output**: Provide one standalone HTML file that includes everything needed to render the chart.
- **Chart fidelity**: Replicate all visual elements—shapes, colors, axes, labels, legends, fonts, line weights, markers—exactly as in the original image.
- **No animations**: The chart must render immediately in its final state.
- **Aspect ratio & sizing**: The chart’s content area (including margins, paddings, and plot area) must match the original image’s proportions precisely.
- **Image**: Recreate any icon/image content using SVG <g> and shapes. Do not use <image>, base64 images, or links.
- **Text**: Place all text in <text> leaf nodes. Do not use <tspan> or nested text structures.

## Grouping Requirements
You should use following `class` names for SVG groups with specific semantics:
- title: The title area (may contain title, subtitle, and shapes)
- image: Each individual icon/image/pictogram (no annotation text, no grouped images)
- legend: Legend area
- axis: Axis area

## Hint
To ensure an accurate and detailed recreation of the figure, begin with a thorough analysis of its visual and structural components. Focus on the following aspects:
1. Layout Analysis: Identify the overall layout, including the placement of the chart, title, and any surrounding images. Pay close attention to the title’s alignment (center, left, or right) and the surrounding white space. Aim for a compact and balanced composition.
2. Chart Type Identification: Examine the visual encoding channels used—such as bar length, area, or position—to determine the chart type. Different encodings imply different data structures and must be matched accordingly.
3. Data Analysis: Carefully interpret the data represented in the chart. Reconstruct the values or patterns as precisely as possible to support accurate reproduction.
4. Additional Features: Look for any supporting visual elements such as legends, color scales, tick marks, labels, or annotations. These contribute to both readability and aesthetic quality, and should be replicated if present.

## Output Format
Return only the following standalone HTML file:

```html
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <title>Recreated Chart</title>
        <!-- <style> -->
    </head>
    <body>
        <div id="chart-container"></div>
        <script src="https://d3js.org/d3.v7.min.js"></script>
        <script>
            <!-- Your D3 code here -->
        </script>
    </body>
</html>
```
Only output this file. No comments or explanation. Keep it minimal and strictly within the token limits.
